AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'CloudFormation Template for instantiating Jacktrip servers in AWS'

Globals:
  Function:
    Runtime: nodejs14.x
Parameters:
  CentralRegion:
    Type: String
    Default: ca-central-1

Resources:
  # Lambdas
  JacktripCreateServer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./backend/functions/regional
      Handler: createServer.handler
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ec2:RunInstances
                - ec2:CreateTags
              Resource: '*'

  JacktripTerminateServer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./backend/functions/regional
      Handler: terminateServer.handler
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ec2:TerminateInstances
              Resource: '*'

  GetServerStatus:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./backend/functions/regional
      Handler: getServerStatus.handler
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ec2:DescribeInstanceStatus
              Resource: '*'

  HandleFail:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./backend/functions/regional
      Handler: handleFail.handler

  HandleSuccess:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./backend/functions/regional
      Handler: handleSuccess.handler

  SqsConsumerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./backend/functions/regional
      Handler: sqsConsumer.handler
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Enabled: true
            Queue: !GetAtt JacktripSqsQueue.Arn
          BatchSize: 5
      Environment:
        Variables:
          stateMachineArn: !Ref JacktripStateMachine
      Policies:
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt JacktripStateMachine.Name

  # SNS Subscription and SQS
  JacktripSqsSnsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Sub arn:aws:sns:${CentralRegion}:173513177120:JacktripSnsTopic.fifo
      Protocol: sqs
      Endpoint: !GetAtt JacktripSqsQueue.Arn
      Region: !Ref CentralRegion
      FilterPolicy:
        region:
          - !Ref AWS::Region

  JacktripSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: JacktripQueue.fifo

  JacktripSqsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref JacktripSqsQueue
      PolicyDocument: # include in JSON format
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Principal:
              Service: sns.amazonaws.com
            Resource: !GetAtt JacktripSqsQueue.Arn

  # Step Functions
  JacktripStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ./backend/state_machine/state_machine.asl.json
      DefinitionSubstitutions:
        CreateServerFunctionArn: !GetAtt JacktripCreateServer.Arn
        TerminateServerFunctionArn: !GetAtt JacktripTerminateServer.Arn
        GetServerStatusFunctionArn: !GetAtt GetServerStatus.Arn
        HandleFailFunctionArn: !GetAtt HandleFail.Arn
        HandleSuccessFunctionArn: !GetAtt HandleSuccess.Arn
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn
      Role: arn:aws:iam::173513177120:role/JacktripStateMachineRole
  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub 'Jacktrip-StateMachine-LogGroup-${AWS::Region}'
